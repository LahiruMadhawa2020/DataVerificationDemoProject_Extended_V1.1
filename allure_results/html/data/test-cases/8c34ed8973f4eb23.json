{
  "uid" : "8c34ed8973f4eb23",
  "name" : "test_target_csv_business_validation",
  "fullName" : "test_tc1_execute_testcsv#test_target_csv_business_validation",
  "historyId" : "585930cadeb5b74202c9737fa28c9903",
  "time" : {
    "start" : 1606724820990,
    "stop" : 1606724821135,
    "duration" : 145
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'False' == 'True'\n  - True\n  + False",
  "statusTrace" : "csv_source_s2 =     ID   Name               Address        Email  Age Gender\n0  1.0   AAAA  23, asdassdas,adaads  abc@abc.com   34    ... 5.0   AAAG  29, asdassdas,adaads  abi@abc.com   80      A\n5  6.0  AAAFA  28, asdassdas,adaads  abh@abc.com   37      M\n\n    @allure.feature('test_module_02')\n    @allure.story('test_story_03')\n    @allure.severity('critical')\n    @pytest.mark.run(order=6)\n    def test_target_csv_business_validation(csv_source_s2):\n        csv_source_selection = csv_source_s2[(csv_source_s2.Age > 75)]\n        result = Validation().run_validation_on(csv_source_selection).expect_table_row_count(0, \"More than 75 years old\")\\\n                                                                     .get_results()\n        \"\"\"\n            Use case description: This is a use case description, Test case 06, validate Age values are less than 75\n        \"\"\"\n        # perform PYTest Assertion\n>       assert TestResult().is_test_passed(result) == 'True'\nE       AssertionError: assert 'False' == 'True'\nE         - True\nE         + False\n\ntest_tc1_execute_testcsv.py:150: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "csv_source_s2",
    "time" : {
      "start" : 1606724820985,
      "stop" : 1606724820990,
      "duration" : 5
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "test_story_03"
  }, {
    "name" : "feature",
    "value" : "test_module_02"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "tag",
    "value" : "run(order=6)"
  }, {
    "name" : "suite",
    "value" : "test_tc1_execute_testcsv"
  }, {
    "name" : "host",
    "value" : "ZSRIL-1X760Z2"
  }, {
    "name" : "thread",
    "value" : "10104-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_tc1_execute_testcsv"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ {
      "uid" : "5c001983f0bad2c8",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 'False' == 'True'\n  - True\n  + False",
      "time" : {
        "start" : 1606723527892,
        "stop" : 1606723527990,
        "duration" : 98
      }
    }, {
      "uid" : "3095e975f7ed8b73",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 'False' == 'True'\n  - True\n  + False",
      "time" : {
        "start" : 1606634787654,
        "stop" : 1606634787755,
        "duration" : 101
      }
    }, {
      "uid" : "42b51226efa552da",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 'False' == 'True'\n  - True\n  + False",
      "time" : {
        "start" : 1606634184925,
        "stop" : 1606634185026,
        "duration" : 101
      }
    }, {
      "uid" : "99f18a3e7037feeb",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 'False' == 'True'\n  - True\n  + False",
      "time" : {
        "start" : 1606407576223,
        "stop" : 1606407576310,
        "duration" : 87
      }
    }, {
      "uid" : "4f7ef5199bf4d079",
      "status" : "broken",
      "statusDetails" : "TypeError: 'function' object is not subscriptable",
      "time" : {
        "start" : 1606407255547,
        "stop" : 1606407255547,
        "duration" : 0
      }
    }, {
      "uid" : "bc9086985b3ca87e",
      "status" : "broken",
      "statusDetails" : "TypeError: 'function' object is not subscriptable",
      "time" : {
        "start" : 1606395855227,
        "stop" : 1606395855228,
        "duration" : 1
      }
    }, {
      "uid" : "f7128809f06574bd",
      "status" : "broken",
      "statusDetails" : "TypeError: 'function' object is not subscriptable",
      "time" : {
        "start" : 1606393323148,
        "stop" : 1606393323148,
        "duration" : 0
      }
    }, {
      "uid" : "ac4bcb2c8d262f76",
      "status" : "broken",
      "statusDetails" : "TypeError: 'function' object is not subscriptable",
      "time" : {
        "start" : 1606391412834,
        "stop" : 1606391412835,
        "duration" : 1
      }
    }, {
      "uid" : "54f9ba8c1b756985",
      "status" : "broken",
      "statusDetails" : "TypeError: 'function' object is not subscriptable",
      "time" : {
        "start" : 1606374278300,
        "stop" : 1606374278300,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=6)" ]
  },
  "source" : "8c34ed8973f4eb23.json",
  "parameterValues" : [ ]
}